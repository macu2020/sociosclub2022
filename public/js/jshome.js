/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/jshome.js":
/*!********************************!*\
  !*** ./resources/js/jshome.js ***!
  \********************************/
/***/ (() => {

eval("var macuriwebmac = function () {\n  var body = $('body'),\n      getId = null,\n      //-------> variable vacia\n  isMobile = !1,\n      //-------> variable false\n  urlPathname = window.location.pathname,\n      //---> ruta y el nombre de archivo de la p√°gina actual\n  // domainurl = window.location.hostname,//--->tambien (host) ruta del dominio\n  domainurl = 'http://localhost/sociosclub2021/public';\n  Toptitop = function Toptitop() {\n    if (/windows phone/i.test(navigator.userAgent) || /android/i.test(navigator.userAgent) || /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) {\n      isMobile = !0; //---->se convierte en true\n    }\n\n    ;\n    fn.documentAjax();\n    fn.documentOnload();\n    fn.documentReady();\n    fn.showsocios();\n  }, fn = {\n    documentAjax: function documentAjax() {\n      $(document).ajaxStop(function () {//fn.login();\n      });\n    },\n    documentOnload: function documentOnload() {\n      $(window).on('load', function () {});\n    },\n    documentReady: function documentReady() {\n      fn.headerHome();\n      fn.otros();\n      fn.homeUserTabla();\n      fn.imgprevia();\n      fn.tooglelogin();\n      fn.validaAddUser();\n      fn.validaEditUser();\n      fn.homeSocioTabla();\n      fn.changeSocio();\n      fn.modalefecto();\n      fn.validAddinvit();\n      fn.validEditinvit();\n      fn.homeInvitaTabla();\n      fn.validaAddSoc();\n      fn.validaEditSoc();\n      fn.graficosbackend();\n      fn.tablereportsoci();\n      fn.tablereportinvi();\n      fn.fechaHoraActual(); //fn.showBuscSocio()\n\n      fn.modalingrsSoci();\n      fn.modalingrsInvi();\n      fn.codigoqr();\n    },\n    headerHome: function headerHome() {\n      //------> Header Home  (nav)\n      var hamburger = document.querySelector('.header-content .hamburger');\n      var mobile_menu = document.querySelector('.header-content .nav-list ul');\n      var header = document.querySelector('.header-content');\n      var headerin = document.querySelector('.stikyheder'); //-----> Icon amburguesa\n\n      if (hamburger) {\n        hamburger.addEventListener('click', function () {\n          hamburger.classList.toggle('active');\n          mobile_menu.classList.toggle('active');\n        });\n        document.addEventListener('scroll', function () {\n          var scroll_position = window.scrollY;\n\n          if (scroll_position > 50) {\n            headerin.style.display = 'none';\n          } else {\n            headerin.style.display = 'block';\n          }\n\n          if (scroll_position > 250) {\n            header.style.background = 'linear-gradient(180deg, rgba(2,0,36,1) 0%, rgba(37,150,190,1) 56%, rgba(0,212,255,1) 100%)';\n          } else if (scroll_position < 250 && $(window).width() > 1024) {\n            header.style.background = '#FBE6C2';\n          }\n        });\n\n        if ($(window).width() < 1024) {\n          header.style.background = 'linear-gradient(180deg, rgba(2,0,36,1) 0%, rgba(37,150,190,1) 56%, rgba(0,212,255,1) 100%)';\n        }\n      }\n\n      $(\".anclinicila\").click(function (event) {\n        hamburger.classList.toggle('active');\n        mobile_menu.classList.toggle('active');\n      }); //-----> HEADER MOVIL\n\n      $('.header-content .nav-list ul li').click(function () {\n        $(this).addClass('selected');\n        $(this).siblings().removeClass('selected');\n      });\n      $('.sub-menu_nav ol').hide();\n      $(\".sub-menu_nav .afirst\").click(function (e) {\n        e.preventDefault();\n        $(this).parent(\".sub-menu_nav\").children(\"ol\").slideToggle(\"100\");\n      });\n    },\n    otros: function otros() {\n      //------> Valida-Alert-Otros\n      //-----> SELECT 2 CONFIG    \n      $('.select-soci').select2({\n        language: {\n          noResults: function noResults() {\n            return \"No hay resultado\";\n          },\n          searching: function searching() {\n            return \"Buscando..\";\n          }\n        }\n      }); //-----> ALERTIFY CONFIG\n\n      if ($(\".alert\").length > 0) {\n        alertify.alert().setting({\n          'title': 'Se ha producido un error : ',\n          'label': 'ok',\n          'message': $('.alert').html(),\n          'onok': function onok() {\n            alertify.error('üòî Vuelva a intentar !!!');\n          }\n        }).show();\n      }\n\n      if ($(\".suceess\").length > 0) {\n        alertify.alert().setting({\n          'title': $('.titlesuceess').html(),\n          'label': 'ok',\n          'message': $('.suceess').html(),\n          'onok': function onok() {\n            alertify.success($('#subitisucess').html());\n          }\n        }).show();\n      } //-----> TOOLTIP CONFIG   \n\n\n      $('[data-toggle=\"tooltip\"]').tooltip(); //-----> JQUERY VALIDATION \n\n      jQuery.validator.addMethod(\"noSpace\", function (value, element) {\n        return value == \"\" || value.trim().length != 0;\n      }, \"No dejar espacios vacios\");\n      jQuery.validator.addMethod(\"lettersonly\", function (value, element) {\n        return this.optional(element) || /^[a-zA-Z ]+$/i.test(value);\n      }, \"Solo permite letras\");\n\n      function validar(value) {\n        //---> metodo para valida DNI\n        var ex_regular_dni;\n        ex_regular_dni = /^\\d{8}(?:[-\\s]\\d{4})?$/;\n\n        if (ex_regular_dni.test(value) == true) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n\n      $.validator.addMethod('dnivalida', function (value, element) {\n        return this.optional(element) || validar(value);\n      }, \"Dni invalido\"); //-----> PRE - VALIDACIONES\n\n      $(\"#celu\").bind('keypress', function (event) {\n        var regex = new RegExp(\"^[0-9]+$\");\n        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\n\n        if (!regex.test(key)) {\n          event.preventDefault();\n          return false;\n        }\n\n        if (event.which < 48 || event.which > 57 || this.value.length === 12) {\n          return false;\n        }\n      });\n      $(\"#email\").bind('keypress', function (event) {\n        if (this.value.length === 35) {\n          return false;\n        }\n      });\n      $(\"#first_name\").bind('keypress', function (event) {\n        var regex = new RegExp(\"^[a-zA-Z√°√©√≠√≥√∫√º√±√Å√â√ç√ì√ö√ú√ë ]+$\");\n        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\n\n        if (!regex.test(key)) {\n          event.preventDefault();\n          return false;\n        }\n\n        if (this.value.length === 25) {\n          return false;\n        }\n      });\n      $(\"#last_name\").bind('keypress', function (event) {\n        var regex = new RegExp(\"^[a-zA-Z√°√©√≠√≥√∫√º√±√Å√â√ç√ì√ö√ú√ë ]+$\");\n        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\n\n        if (!regex.test(key)) {\n          event.preventDefault();\n          return false;\n        }\n\n        if (this.value.length === 25) {\n          return false;\n        }\n      });\n      $(\"#password\").bind('keypress', function (event) {\n        if (this.value.length === 10) {\n          return false;\n        }\n      });\n      $(\"#conf_pass\").bind('keypress', function (event) {\n        if (this.value.length === 10) {\n          return false;\n        }\n      });\n      $(\"#clave_socio\").bind('keypress', function (event) {\n        if (this.value.length === 7) {\n          return false;\n        }\n      });\n      $(\"#placa_socio\").bind('keypress', function (event) {\n        if (this.value.length === 7) {\n          return false;\n        }\n      });\n      $(\"#clavetit\").bind('keypress', function (event) {\n        if (this.value.length === 7) {\n          return false;\n        }\n      });\n      $(\"#dni\").bind('keypress', function (event) {\n        var regex = new RegExp(\"^[0-9]+$\");\n        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\n\n        if (!regex.test(key)) {\n          event.preventDefault();\n          return false;\n        }\n\n        if (event.which < 48 || event.which > 57 || this.value.length === 8) {\n          return false;\n        }\n      });\n    },\n    showsocios: function showsocios() {\n      //------> Mostrar socio Home\n      $('#form-showsocios').validate({\n        ignore: '.ignore',\n        errorClass: 'invalid',\n        validClass: 'success',\n        rules: {\n          clave_socio: {\n            required: true,\n            minlength: 2,\n            maxlength: 7,\n            noSpace: true\n          }\n        },\n        messages: {\n          clave_socio: {\n            required: \"Ingrese clave de socio\",\n            minlength: \"minimo 2 carateres \",\n            maxlength: \"maximo 7 carateres \"\n          }\n        },\n        errorPlacement: function errorPlacement(error, element) {\n          error.insertAfter(element);\n        },\n        submitHandler: function submitHandler(form) {\n          //animacion \n\n          /*$.LoadingOverlay(\"show\");\r\n           form.submit();*/\n          var _token = $('input[name=\"_token\"]').val();\n\n          var clave = $(\"#clave_socio\").val();\n          var carga = $(\".img_banner\");\n          var carga2 = $(\".img_banner2\");\n          $.ajax({\n            url: form.action,\n            type: form.method,\n            dataType: 'json',\n            data: {\n              clave: clave,\n              _token: _token\n            },\n            beforeSend: function beforeSend(objeto) {\n              carga.addClass('loading');\n              carga2.addClass('loading');\n              $(\".titu\").css({\n                opacity: '0'\n              });\n            }\n          }).done(function (data) {\n            carga.removeClass(\"loading\");\n            carga2.removeClass(\"loading\");\n            var datamacuri = data.datacla;\n            console.log(datamacuri);\n            var datatitular = '';\n            var datafamilia = '';\n\n            for (var i = 0; i < datamacuri.length; ++i) {\n              if (datamacuri[i].tipo === 'Titular' || datamacuri[i].tipo === 'Conyuge') {\n                if (datamacuri[i].avatar === null) {\n                  var photo = \"\".concat(domainurl, \"/img/iconos/user-avatar.png\");\n                } else {\n                  var photo = \"\".concat(domainurl, \"/uploads_socios/soc_\").concat(datamacuri[i].idsoc, \"/av_\") + datamacuri[i].avatar;\n                }\n\n                if (datamacuri[i].placa !== null) {\n                  $(\"#placa_socio\").val(datamacuri[i].placa);\n                }\n\n                datatitular += \"\\n                            <div class=\\\"titu d-flex flex-column justify-content-center align-items-center   \\\">\\n                               <p>\".concat(datamacuri[i].tipo, \"</p>\\n                              <img src=\\\"\").concat(photo, \"\\\" alt=\\\"\\\" width=\\\"90\\\" height=\\\"90\\\" id=\\\"img-updat-\").concat(datamacuri[i].idsoc, \"\\\" class=\\\"img-soci-dash rounded \").concat(datamacuri[i].estadosoc == \"0\" ? \"disabled\" : \"enabled\", \"\\\">\\n                              <p class=\\\"pt-2 psubnombre\\\"  >\").concat(datamacuri[i].name, \" \").concat(datamacuri[i].lastname, \"</p>\\n                              <div class=\\\"maines\\\">\\n                                <label class=\\\"switch\\\">\\n                                <input \").concat(datamacuri[i].estadosoc == \"0\" ? \"\" : \"checked\", \"  class=\\\"checksoc\\\"  type=\\\"checkbox\\\" value=\\\"\").concat(datamacuri[i].idsoc, \"\\\" />\\n                                <span class=\\\"slider round icon\\\"></span>\\n                                 </label>\\n                              </div>\\n                            </div>\");\n              }\n\n              if (datamacuri[i].tipo === 'Familiar') {\n                if (datamacuri[i].avatar === null) {\n                  var photo = \"\".concat(domainurl, \"/img/iconos/user-avatar.png\");\n                } else {\n                  var photo = \"\".concat(domainurl, \"/uploads_socios/soc_\").concat(datamacuri[i].idsoc, \"/av_\") + datamacuri[i].avatar;\n                }\n\n                datafamilia += \"\\n                              <div class=\\\"titu d-flex flex-column justify-content-center align-items-center  \\\">\\n                                <p>\".concat(datamacuri[i].tipo, \"</p>\\n                                 <img src=\\\"\").concat(photo, \"\\\" alt=\\\"\\\" width=\\\"90\\\" height=\\\"90\\\" id=\\\"img-updat-\").concat(datamacuri[i].idsoc, \"\\\" class=\\\"img-soci-dash rounded \").concat(datamacuri[i].estadosoc == \"0\" ? \"disabled\" : \"enabled\", \"\\\">\\n                                <p class=\\\"pt-2 psubnombre\\\">\").concat(datamacuri[i].name, \" \").concat(datamacuri[i].lastname, \"</p>\\n\\n                                <div class=\\\"maines\\\">\\n                                  <label class=\\\"switch\\\">\\n                                <input \").concat(datamacuri[i].estadosoc == \"0\" ? \"\" : \"checked\", \" class=\\\"checksoc\\\"  type=\\\"checkbox\\\" value=\\\"\").concat(datamacuri[i].idsoc, \"\\\" />\\n                                  <span class=\\\"slider round icon\\\"></span>\\n                                   </label>\\n                                </div>\\n                              </div>\");\n              }\n            }\n\n            carga.html(datatitular);\n            carga2.html(datafamilia);\n\n            if (data.datacla == \"\") {\n              carga.html('<div> <h2> Socio no encontrado !!!</h2></div>');\n              carga2.html('<div> <h2> Socio no encontrado !!!</h2></div>');\n            } // console.log(\"success\");\n\n          }).fail(function () {\n            console.log(\"error\");\n          }).always(function () {\n            $('.checksoc').on('click', function () {\n              if ($(this).is(':checked')) {\n                $(this).prop('disabled', true);\n                var valorid = $(this).val();\n                $(\"#img-updat-\" + valorid).removeClass('disabled');\n                $(\"#img-updat-\" + valorid).addClass('enabled');\n                $.ajax({\n                  url: domainurl + '/asist-soc',\n                  type: 'GET',\n                  dataType: 'json',\n                  data: {\n                    clave: $(this).val(),\n                    _token: _token\n                  }\n                }).done(function (data) {\n                  console.log(data);\n                  console.log(\"success\");\n                }).fail(function () {\n                  console.log(\"error\");\n                }).always(function () {\n                  console.log(\"complete\");\n                }); //alert(\"El checkbox con valor \" + $(this).val() + \" ha sido seleccionado\");\n              }\n              /*else {\r\n                  // Hacer algo si el checkbox ha sido deseleccionado\r\n                  let valorid=$(this).val()\r\n                  $(\"#img-updat-\"+valorid).removeClass('enabled')\r\n                  $(\"#img-updat-\"+valorid).addClass('disabled')\r\n                  $.ajax({\r\n                    url: domainurl+'/asistnull-soc',\r\n                    type: 'GET',\r\n                    dataType: 'json',\r\n                    data: {clave:$(this).val(),_token:_token},\r\n                  })\r\n                  .done(function(data) {\r\n                    console.log(data)\r\n                    console.log(\"success\");\r\n                  })\r\n                  .fail(function() {\r\n                    console.log(\"error\");\r\n                  })\r\n              }*/\n\n            }); //console.log(\"complete\");\n          });\n        }\n      });\n    },\n    showBuscSocio: function showBuscSocio() {\n      //------> Buscar socio Home\n      $('#form-busca-socios').validate({\n        ignore: '.ignore',\n        errorClass: 'invalid',\n        validClass: 'success',\n        rules: {\n          clave_socio: {\n            required: true,\n            minlength: 2,\n            maxlength: 7,\n            noSpace: true\n          }\n        },\n        messages: {\n          clave_socio: {\n            required: \"Ingrese clave de socio\",\n            minlength: \"minimo 2 carateres \",\n            maxlength: \"maximo 7 carateres \"\n          }\n        },\n        errorPlacement: function errorPlacement(error, element) {\n          error.insertAfter(element);\n        },\n        submitHandler: function submitHandler(form) {\n          //animacion \n\n          /*$.LoadingOverlay(\"show\");\r\n           form.submit();*/\n          var _token = $('input[name=\"_token\"]').val();\n\n          var clave = $(\"#clave_socio_busca\").val();\n          var carga = $(\".img_banner\");\n          var carga2 = $(\".img_banner2\");\n          $.ajax({\n            url: form.action,\n            type: form.method,\n            dataType: 'json',\n            data: {\n              clave: clave,\n              _token: _token\n            },\n            beforeSend: function beforeSend(objeto) {\n              carga.addClass('loading');\n              carga2.addClass('loading');\n              $(\".titu\").css({\n                opacity: '0'\n              });\n            }\n          }).done(function (data) {\n            carga.removeClass(\"loading\");\n            carga2.removeClass(\"loading\");\n            var datamacuri = data.datacla;\n            console.log(datamacuri);\n            var datatitular = '';\n            var datafamilia = '';\n\n            for (var i = 0; i < datamacuri.length; ++i) {\n              if (datamacuri[i].tipo === 'Titular' || datamacuri[i].tipo === 'Conyuge') {\n                if (datamacuri[i].avatar === null) {\n                  var photo = \"\".concat(domainurl, \"/img/iconos/user-avatar.png\");\n                } else {\n                  var photo = \"\".concat(domainurl, \"/uploads_socios/soc_\").concat(datamacuri[i].idsoc, \"/av_\") + datamacuri[i].avatar;\n                }\n\n                datatitular += \"\\n                            <div class=\\\"titu d-flex flex-column justify-content-center align-items-center p-3\\\">\\n                               <p>\".concat(datamacuri[i].tipo, \"</p>\\n                              <img src=\\\"\").concat(photo, \"\\\" alt=\\\"\\\" width=\\\"90\\\" height=\\\"90\\\" id=\\\"img-updat-\").concat(datamacuri[i].idsoc, \"\\\" class=\\\"img-soci-dash rounded \").concat(datamacuri[i].estadosoc == \"0\" ? \"disabled\" : \"enabled\", \"\\\">\\n                              <p class=\\\"pt-2\\\"  >\").concat(datamacuri[i].name, \" \").concat(datamacuri[i].lastname, \"</p>\\n                              <div class=\\\"maines\\\">\\n                                <label class=\\\"switch\\\">\\n                                <input \").concat(datamacuri[i].estadosoc == \"0\" ? \"\" : \"checked\", \"  class=\\\"checksoc\\\"  type=\\\"checkbox\\\" value=\\\"\").concat(datamacuri[i].idsoc, \"\\\" />\\n                                <span class=\\\"slider round icon\\\"></span>\\n                                 </label>\\n                              </div>\\n                            </div>\");\n              }\n\n              if (datamacuri[i].tipo === 'Familiar') {\n                if (datamacuri[i].avatar === null) {\n                  var photo = \"\".concat(domainurl, \"/img/iconos/user-avatar.png\");\n                } else {\n                  var photo = \"\".concat(domainurl, \"/uploads_socios/soc_/av_\") + datamacuri[i].avatar;\n                }\n\n                datafamilia += \"\\n                              <div class=\\\"titu d-flex flex-column justify-content-center align-items-center p-3\\\">\\n                                <p>\".concat(datamacuri[i].tipo, \"</p>\\n                                 <img src=\\\"\").concat(photo, \"\\\" alt=\\\"\\\" width=\\\"90\\\" height=\\\"90\\\" id=\\\"img-updat-\").concat(datamacuri[i].idsoc, \"\\\" class=\\\"img-soci-dash rounded \").concat(datamacuri[i].estadosoc == \"0\" ? \"disabled\" : \"enabled\", \"\\\">\\n                                <p class=\\\"pt-2\\\">\").concat(datamacuri[i].name, \" \").concat(datamacuri[i].lastname, \"</p>\\n\\n                                <div class=\\\"maines\\\">\\n                                  <label class=\\\"switch\\\">\\n                                <input \").concat(datamacuri[i].estadosoc == \"0\" ? \"\" : \"checked\", \" class=\\\"checksoc\\\"  type=\\\"checkbox\\\" value=\\\"\").concat(datamacuri[i].idsoc, \"\\\" />\\n                                  <span class=\\\"slider round icon\\\"></span>\\n                                   </label>\\n                                </div>\\n                              </div>\");\n              }\n            }\n\n            carga.html(datatitular);\n            carga2.html(datafamilia);\n\n            if (data.datacla == \"\") {\n              carga.html('<div> <h2> El Socio no ingreso !!!</h2></div>');\n              carga2.html('<div> <h2>El Socio no ingreso !!!</h2></div>');\n            }\n\n            console.log(\"success\");\n          }).fail(function () {\n            console.log(\"error\");\n          }).always(function () {\n            $('.checksoc').on('click', function () {\n              if ($(this).is(':checked')) {\n                var valorid = $(this).val();\n                $(\"#img-updat-\" + valorid).removeClass('disabled');\n                $(\"#img-updat-\" + valorid).addClass('enabled');\n                $.ajax({\n                  url: domainurl + '/asist-soc',\n                  type: 'GET',\n                  dataType: 'json',\n                  data: {\n                    clave: $(this).val(),\n                    _token: _token\n                  }\n                }).done(function (data) {\n                  console.log(data);\n                  console.log(\"success\");\n                }).fail(function () {\n                  console.log(\"error\");\n                }).always(function () {\n                  console.log(\"complete\");\n                }); //alert(\"El checkbox con valor \" + $(this).val() + \" ha sido seleccionado\");\n              } else {\n                // Hacer algo si el checkbox ha sido deseleccionado\n                var _valorid = $(this).val();\n\n                $(\"#img-updat-\" + _valorid).removeClass('enabled');\n                $(\"#img-updat-\" + _valorid).addClass('disabled');\n                $.ajax({\n                  url: domainurl + '/asistnull-soc',\n                  type: 'GET',\n                  dataType: 'json',\n                  data: {\n                    clave: $(this).val(),\n                    _token: _token\n                  }\n                }).done(function (data) {\n                  console.log(data);\n                  console.log(\"success\");\n                }).fail(function () {\n                  console.log(\"error\");\n                });\n              }\n            }); //console.log(\"complete\");\n          });\n        }\n      });\n    },\n    homeUserTabla: function homeUserTabla() {\n      //-----> User Tabla Home   \n      $(\"#tbl_users\").DataTable({\n        language: {\n          \"lengthMenu\": \"Mostrar _MENU_ registros\",\n          \"zeroRecords\": \"No se encontraron resultados\",\n          \"info\": \"Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros\",\n          \"infoEmpty\": \"Mostrando registros del 0 al 0 de un total de 0 registros\",\n          \"infoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\n          \"sSearch\": \"Buscar:\",\n          \"oPaginate\": {\n            \"sFirst\": \"Primero\",\n            \"sLast\": \"√öltimo\",\n            \"sNext\": \"Siguiente\",\n            \"sPrevious\": \"Anterior\"\n          },\n          \"sProcessing\": \"Procesando...\"\n        },\n        responsive: true,\n        dom: 'Bfrtilp',\n        buttons: [{\n          extend: 'pdfHtml5',\n          text: '<img src=' + domainurl + '/img/iconos/iconpdf.png width=\"100%\" class=\"img-fluid\">  ',\n          titleAttr: 'Exportar a PDF',\n          messageTop: 'Registro de Usuario',\n          title: 'Tabla de Usuarios',\n          className: 'btn btn-danger',\n          exportOptions: {\n            columns: [0, 1, 3, 4],\n            alignment: 'center'\n          },\n          excelStyles: {\n            template: 'blue_gray_medium'\n          },\n          customize: function customize(doc) {\n            doc.defaultStyle.alignment = 'center';\n            doc.styles.title = {\n              color: 'red',\n              fontSize: '30',\n              alignment: 'center'\n            };\n            doc.styles['td:nth-child(2)'] = {\n              width: '100px',\n              'max-width': '100px'\n            };\n          }\n        }, {\n          extend: 'print',\n          text: '<img src=' + domainurl + '/img/iconos/iconimp.png width=\"100%\" class=\"img-fluid\">  ',\n          titleAttr: 'imprimir',\n          className: 'btn btn-secondary',\n          exportOptions: {\n            columns: [0, 1, 3, 4]\n          }\n        }, {\n          extend: 'excelHtml5',\n          text: '<img src=' + domainurl + '/img/iconos/icoexcel.png width=\"100%\" class=\"img-fluid\">   ',\n          titleAttr: 'Exportar a Excel',\n          className: 'btn btn-success',\n          exportOptions: {\n            columns: [0, 1, 3, 4]\n          },\n          excelStyles: [// Add an excelStyles definition\n          {\n            template: \"black_medium\" // Apply the \"green_medium\" template\n\n          }, {\n            cells: \"sh\",\n            style: {\n              alignment: {\n                vertical: \"centerContinuous\",\n                horizontal: \"centerContinuous\",\n                wrapText: true\n              },\n              font: {\n                b: true,\n                color: \"FFFFFF\"\n              },\n              fill: {\n                pattern: {\n                  style: \"thick\",\n                  bgColor: 'fd0a43',\n                  color: \"457B9D\" // Fill color \n\n                }\n              }\n            }\n          }, {\n            cells: \"A:\",\n            style: {\n              alignment: {\n                vertical: \"centerContinuous\",\n                horizontal: \"centerContinuous\",\n                wrapText: true\n              }\n            }\n          }]\n        }]\n      }); //---->eliminar\n\n      $('#tbl_users tbody').on('click', 'a[data-id=\"elicli\"]', function () {\n        var ide = this.name,\n            nom = $(this).attr('data-nom');\n        Swal.fire({\n          title: '¬øEstas seguro de eliminar \"' + nom + '\" ?',\n          text: \"No podr√°s revertir esto !!!\",\n          showCancelButton: true,\n          confirmButtonText: 'Si, eliminar ',\n          backdrop: \" rgba(0, 0, 0, 0.7) \"\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            var _token = $('input[name=\"_token\"]').val();\n\n            $.ajax({\n              url: domainurl + '/user/' + ide + '/delete/',\n              type: 'GET',\n              beforeSend: function beforeSend() {\n                $.LoadingOverlay(\"show\");\n              }\n            }).done(function (data) {\n              $.LoadingOverlay(\"hide\");\n              Swal.fire({\n                icon: 'success',\n                title: \"Tu Usuario a sido eliminado.\",\n                confirmButtonText: \"Aceptar\"\n              }).then(function () {\n                location.reload();\n              });\n              console.log(\"success\");\n            }).fail(function () {\n              $.LoadingOverlay(\"hide\");\n              Swal.fire({\n                icon: 'error',\n                title: \"No se pudo eliminar el usuario.\",\n                text: 'Intente de nuevo',\n                confirmButtonText: \"Aceptar\"\n              }).then(function () {\n                location.reload();\n              });\n              console.log(\"error\");\n            });\n          }\n        });\n      });\n    },\n    homeSocioTabla: function homeSocioTabla() {\n      //----> Socio Tabla Home  \n      $(\"#tbl_socio\").DataTable({\n        language: {\n          \"lengthMenu\": \"Mostrar _MENU_ registros\",\n          \"zeroRecords\": \"No se encontraron resultados\",\n          \"info\": \"Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros\",\n          \"infoEmpty\": \"Mostrando registros del 0 al 0 de un total de 0 registros\",\n          \"infoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\n          \"sSearch\": \"Buscar:\",\n          \"oPaginate\": {\n            \"sFirst\": \"Primero\",\n            \"sLast\": \"√öltimo\",\n            \"sNext\": \"Siguiente\",\n            \"sPrevious\": \"Anterior\"\n          },\n          \"sProcessing\": \"Procesando...\"\n        },\n        responsive: true,\n        dom: 'Bfrtilp',\n        buttons: [{\n          extend: 'pdfHtml5',\n          text: '<img src=' + domainurl + '/img/iconos/iconpdf.png width=\"100%\" class=\"img-fluid\">  ',\n          titleAttr: 'Exportar a PDF',\n          messageTop: 'Registro de Socios',\n          title: 'Tabla de Socios',\n          className: 'btn btn-danger',\n          exportOptions: {\n            columns: [0, 1, 3, 4, 5, 6, 7, 8, 9],\n            alignment: 'center'\n          },\n          excelStyles: {\n            template: 'blue_gray_medium'\n          },\n          customize: function customize(doc) {\n            doc.defaultStyle.alignment = 'center';\n            doc.styles.title = {\n              color: 'red',\n              fontSize: '30',\n              alignment: 'center'\n            };\n            doc.styles['td:nth-child(2)'] = {\n              width: '100px',\n              'max-width': '100px'\n            };\n          }\n        }, {\n          extend: 'print',\n          text: '<img src=' + domainurl + '/img/iconos/iconimp.png width=\"100%\" class=\"img-fluid\">  ',\n          titleAttr: 'imprimir',\n          className: 'btn btn-secondary',\n          exportOptions: {\n            columns: [0, 1, 3, 4, 5, 6, 7, 8, 9]\n          }\n        }, {\n          extend: 'excelHtml5',\n          text: '<img src=' + domainurl + '/img/iconos/icoexcel.png width=\"100%\" class=\"img-fluid\">   ',\n          titleAttr: 'Exportar a Excel',\n          className: 'btn btn-success',\n          exportOptions: {\n            columns: [0, 1, 3, 4, 5, 6, 7, 8, 9]\n          },\n          excelStyles: [// Add an excelStyles definition\n          {\n            template: \"black_medium\" // Apply the \"green_medium\" template\n\n          }, {\n            cells: \"sh\",\n            style: {\n              alignment: {\n                vertical: \"centerContinuous\",\n                horizontal: \"centerContinuous\",\n                wrapText: true\n              },\n              font: {\n                b: true,\n                color: \"FFFFFF\"\n              },\n              fill: {\n                pattern: {\n                  style: \"thick\",\n                  bgColor: 'fd0a43',\n                  color: \"457B9D\" // Fill color \n\n                }\n              }\n            }\n          }, {\n            cells: \"A:\",\n            style: {\n              alignment: {\n                vertical: \"centerContinuous\",\n                horizontal: \"centerContinuous\",\n                wrapText: true\n              }\n            }\n          }]\n        }]\n      }); //---->eliminar\n\n      $('#tbl_socio tbody').on('click', 'a[data-id=\"elicli\"]', function () {\n        var ide = this.name,\n            nom = $(this).attr('data-nom');\n        Swal.fire({\n          title: '¬øEstas seguro de eliminar \"' + nom + '\" ?',\n          text: \"No podr√°s revertir esto !!!\",\n          showCancelButton: true,\n          confirmButtonText: 'Si, eliminar ',\n          backdrop: \" rgba(0, 0, 0, 0.7)  \"\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            var _token = $('input[name=\"_token\"]').val();\n\n            $.ajax({\n              url: domainurl + '/socio/' + ide + '/delete/',\n              type: 'GET',\n              beforeSend: function beforeSend() {\n                $.LoadingOverlay(\"show\");\n              }\n            }).done(function (data) {\n              $.LoadingOverlay(\"hide\");\n              console.log(\"success\");\n              Swal.fire({\n                icon: 'success',\n                title: \"Tu Socio a sido eliminado.\",\n                confirmButtonText: \"Aceptar\"\n              }).then(function () {\n                location.reload();\n              });\n            }).fail(function () {\n              $.LoadingOverlay(\"hide\");\n              Swal.fire({\n                icon: 'error',\n                title: \"No se pudo eliminar el socio.\",\n                text: 'Intente de nuevo',\n                confirmButtonText: \"Aceptar\"\n              }).then(function () {\n                location.reload();\n              });\n              console.log(\"error\");\n            });\n          }\n        });\n      }); //---->Update socio QR\n\n      $('#tbl_socio tbody').on('click', 'a[data-id=\"upqr\"]', function () {\n        var ide = this.name,\n            nom = $(this).attr('data-nom');\n        Swal.fire({\n          title: '¬øGenerando Codigo QR para el socio \"' + nom + '\" ?',\n          showCancelButton: true,\n          confirmButtonText: 'Si, Generar ',\n          backdrop: \" rgba(0, 0, 0, 0.7)  \"\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            var _token = $('input[name=\"_token\"]').val();\n\n            $.ajax({\n              url: domainurl + '/socio/' + ide + '/updqr/',\n              type: 'GET',\n              beforeSend: function beforeSend() {\n                $.LoadingOverlay(\"show\");\n              }\n            }).done(function (data) {\n              $.LoadingOverlay(\"hide\");\n              console.log(\"success\");\n              Swal.fire({\n                icon: 'success',\n                title: \"Se a generado un nuevo Qr para este socio.\",\n                confirmButtonText: \"Aceptar\"\n              });\n            }).fail(function () {\n              $.LoadingOverlay(\"hide\");\n              Swal.fire({\n                icon: 'error',\n                title: \"No se pudo crear el QR.\",\n                text: 'Intente de nuevo',\n                confirmButtonText: \"Aceptar\"\n              }).then(function () {\n                location.reload();\n              });\n              console.log(\"error\");\n            });\n          }\n        });\n      });\n    },\n    tooglelogin: function tooglelogin() {\n      //----> Show password     \n      $(\".toggle-password\").click(function () {\n        $(this).toggleClass(\"fa-eye fa-eye-slash\");\n        var input = $($(this).attr(\"toggle\"));\n\n        if (input.attr(\"type\") == \"password\") {\n          input.attr(\"type\", \"text\");\n        } else {\n          input.attr(\"type\", \"password\");\n        }\n      });\n    },\n    imgprevia: function imgprevia() {\n      //----> Imagen previa     \n      if ($(\"#customFile\").length > 0) {\n        var archivoInput = document.getElementById('customFile');\n        archivoInput.addEventListener('change', function () {\n          var archivoRuta = archivoInput.value;\n          var extPermitidas = /(.jpg|.jpeg|.png)$/i;\n\n          if (!extPermitidas.exec(archivoRuta)) {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Esto no es una imagen!!!'\n            });\n            $(\"#img-maci\").attr(\"src\", domainurl + \"/images/imgnopas.jpg\");\n            archivoInput.value = '';\n            return false;\n          }\n        });\n      }\n\n      function filePreview(input) {\n        //----> IMG-PREVIA-MARCA \n        var imgmacuri = $(\"#img-maci\");\n\n        if (input.files && input.files[0]) {\n          var reader = new FileReader();\n\n          reader.onload = function (e) {\n            $(\"#img-maci\").attr(\"src\", e.target.result);\n          };\n\n          reader.readAsDataURL(input.files[0]);\n        }\n      }\n\n      $(\"#customFile\").change(function () {\n        filePreview(this);\n      });\n    },\n    validaAddUser: function validaAddUser() {\n      //----> Valida user Add   \n      $('#save_user').validate({\n        ignore: '.ignore',\n        errorClass: 'invalid',\n        validClass: 'success',\n        rules: {\n          first_name: {\n            required: true,\n            minlength: 2,\n            maxlength: 25,\n            noSpace: true\n          },\n          last_name: {\n            required: true,\n            minlength: 2,\n            maxlength: 25,\n            noSpace: true\n          },\n          email: {\n            // se envia a una ruta de un controlador par saber si existe el correo \n            required: true,\n            email: true,\n            remote: {\n              url: domainurl + \"/add-user/check_email_unique\",\n              type: \"post\",\n              data: {\n                email: function email() {\n                  return $(\"#email\").val();\n                },\n                '_token': $('meta[name=\"csrf-token\"]').attr('content')\n              }\n            }\n          },\n          password: {\n            required: true,\n            minlength: 6,\n            maxlength: 10\n          },\n          selecperfil: {\n            required: true\n          },\n          conf_pass: {\n            required: true,\n            maxlength: 10,\n            equalTo: '#password'\n          }\n        },\n        messages: {\n          first_name: {\n            required: \"Porfavor ingrese su nombre\",\n            minlength: \"Porfavor minimo 2 caracteres\",\n            maxlength: \"Prfavor maximo 25 caracteres\"\n          },\n          last_name: {\n            required: \"Porfavor ingrese el apellido\",\n            minlength: \"Porfavor minimo 2 caracteres\",\n            maxlength: \"Prfavor maximo 25 caracteres\"\n          },\n          selecperfil: {\n            required: \"Perfil requerido\"\n          },\n          email: {\n            required: \"Porfavor ingrese su Email\",\n            email: \"Su correo electr√≥nico no es valido\",\n            remote: \"Correo electr√≥nico ya en uso.Prueba con otro\"\n          },\n          password: {\n            required: \"Ingrese su password\",\n            minlength: \"Porfavor minimo 6 caracteres\",\n            maxlength: \"Prfavor maximo 10 caracteres\"\n          },\n          conf_pass: {\n            required: \"Necesita la confirmacion de su password\",\n            equalTo: \"La contrase√±a no conciden\"\n          }\n        },\n        errorPlacement: function errorPlacement(error, element) {\n          error.insertAfter(element);\n        },\n        submitHandler: function submitHandler(form) {\n          //animacion \n          console.log(\"ahora macuri\");\n          $.LoadingOverlay(\"show\");\n          form.submit();\n        }\n      });\n    },\n    validaEditUser: function validaEditUser() {\n      //----> Valida user Edit  \n      $('#edit_user').validate({\n        ignore: '.ignore',\n        errorClass: 'invalid',\n        validClass: 'success',\n        rules: {\n          first_name: {\n            required: true,\n            minlength: 2,\n            maxlength: 25,\n            noSpace: true\n          },\n          last_name: {\n            required: true,\n            minlength: 2,\n            maxlength: 25,\n            noSpace: true\n          },\n          email: {\n            // se envia a una ruta de un controlador par saber si existe el correo \n            required: true\n          },\n          password: {\n            minlength: 6,\n            maxlength: 10\n          },\n          selecperfil: {\n            required: true\n          },\n          conf_pass: {\n            maxlength: 10,\n            equalTo: '#password'\n          }\n        },\n        messages: {\n          first_name: {\n            required: \"Porfavor ingrese su nombre\",\n            minlength: \"Porfavor minimo 2 caracteres\",\n            maxlength: \"Prfavor maximo 25 caracteres\"\n          },\n          last_name: {\n            required: \"Porfavor ingrese el apellido\",\n            minlength: \"Porfavor minimo 2 caracteres\",\n            maxlength: \"Prfavor maximo 25 caracteres\"\n          },\n          selecperfil: {\n            required: \"Perfil requerido\"\n          },\n          email: {\n            required: \"Porfavor ingrese su Email\",\n            email: \"Su correo electr√≥nico no es valido\",\n            remote: \"Correo electr√≥nico ya en uso.Prueba con otro\"\n          },\n          password: {\n            required: \"Ingrese su password\",\n            minlength: \"Porfavor minimo 6 caracteres\",\n            maxlength: \"Prfavor maximo 10 caracteres\"\n          },\n          conf_pass: {\n            required: \"Necesita la confirmacion de su password\",\n            equalTo: \"La contrase√±a no conciden\"\n          }\n        },\n        errorPlacement: function errorPlacement(error, element) {\n          error.insertAfter(element);\n        },\n        submitHandler: function submitHandler(form) {\n          //animacion \n          console.log(\"ahora macuri\");\n          $.LoadingOverlay(\"show\");\n          form.submit();\n        }\n      });\n    },\n    changeSocio: function changeSocio() {\n      //----> Select Camb Perfil\n      $('#rowtit').hide();\n      $('#notitu').hide();\n      $('#sititu').hide();\n      $('#selecperfil').change(function () {\n        if ($('#selecperfil').val() == '1') {\n          $('#sititu').show('3000');\n          $('#rowtit').hide('3000');\n          $('#notitu').hide('3000');\n        } else if ($('#selecperfil').val() == '2') {\n          $('#sititu').show('3000');\n          $('#rowtit').show('3000');\n          $('#notitu').hide('3000');\n        } else if ($('#selecperfil').val() == '3') {\n          $('#rowtit').show('3000');\n          $('#notitu').show('3000');\n          $('#sititu').hide('3000');\n        } else if ($('#selecperfil').val() === '') {\n          $('#rowtit').hide('3000');\n          $('#notitu').hide('3000');\n          $('#sititu').hide('3000');\n        }\n      });\n    },\n    modalefecto: function modalefecto() {\n      //----> Modal Add Invitado\n      $(\".btninvitado\").hide(); //---> METODO PARA CARGA RENGO DE INVITADOS MAXMIMO\n\n      function move(dataporc) {\n        var elem = document.getElementById(\"myBar\");\n        var width = 10;\n        var id = setInterval(frame, 10);\n\n        function frame() {\n          if (width >= dataporc) {\n            clearInterval(id);\n          } else {\n            width++;\n            elem.style.width = width + '%';\n            document.getElementById(\"label\").innerHTML = width * 1 + '%';\n          }\n        }\n      } //-----> keyup codigo buscar cliente \n\n\n      $(\"#clave_socio\").keyup(function (event) {\n        event.preventDefault();\n        var inputclav = $(this).val();\n\n        var _token = $('input[name=\"_token\"]').val(); //console.log(inputclav)\n\n\n        $.ajax({\n          url: domainurl + '/home/buscaclave/',\n          type: 'GET',\n          dataType: 'json',\n          data: {\n            inputclav: inputclav,\n            _token: _token\n          }\n        }).done(function (data) {\n          // console.log(data)\n          // console.log(data.datasoc)\n          // VER DATOS DEL SOCIO \n          if (data.datasoc != null) {\n            $(\".btninvitado\").slideDown();\n            $(\"#nomsocioti\").val(data.datasoc.name + \" \" + data.datasoc.lastname);\n          } else {\n            $(\".btninvitado\").slideUp();\n          } // VER ADULTOS  DE INVITADOS\n\n\n          if (data.adulto != null) {\n            $(\"#adulto\").val(data.adulto);\n          } else {\n            $(\"#adulto\").val(0);\n          } // VER  NI√ëOS   DE INVITADOS\n\n\n          if (data.nino != null) {\n            $(\"#nino\").val(data.nino);\n          } else {\n            $(\"#nino\").val(0);\n          } // VER CUPOS DE INVITADOS DISPONIBLE\n\n\n          if (data.continvit != null) {\n            console.log();\n            move(parseInt(data.continvit) * 25);\n            $(\"#cupUsa\").slideDown(\"slow\", function () {\n              // Animation complete.\n              $(this).html('0' + data.continvit);\n              var difecupos = 4 - parseInt(data.continvit); ///  console.log(difecupos)\n\n              if (difecupos == 0) {\n                // console.log(\"excedio su nivel\")\n                $(\"#cuplib\").css({\n                  color: '#FF0000'\n                }).html('--');\n                $(\"#myBar\").css({\n                  background: '#FF0000'\n                });\n              } else {\n                $(\"#cuplib\").css({\n                  color: '#008000'\n                }).html(difecupos);\n                $(\"#myBar\").css({\n                  background: '#008000'\n                });\n              }\n            });\n          } else {\n            var elemen = $(\"#myBar\").width(0);\n            $(\"#label\").html(0 + '%');\n            $(\"#cupUsa\").slideUp(\"slow\", function () {\n              // Animation complete.\n              $(this).html('00');\n            });\n            $(\"#cuplib\").slideUp(\"slow\", function () {\n              // Animation complete.\n              $(this).html('00');\n            });\n          }\n        }).fail(function () {\n          console.log(\"error\");\n        });\n      }); //-----> Ancla Invitado por dia\n\n      $(\".btninvitado\").click(function (event) {\n        event.preventDefault();\n\n        if ($(\"#clave_socio\").val() != '') {\n          var codsoci = $(\"#clave_socio\").val();\n          var nomtitul = $(\"#nomsocioti\").val();\n          showPopup(nomtitul, codsoci);\n        }\n      });\n\n      function showPopup(nomtitul, codsoci) {\n        //--> Metodo Modal\n        event.preventDefault();\n        $(\"#cod-soci-hidden\").html(codsoci);\n        $(\"#cod-soci\").val(codsoci);\n        $(\"#titul\").val(nomtitul);\n        $('#modalPed').removeClass('contmod-efectsalir');\n        $('#modalPed').addClass('contmod-efect');\n        $('.body_m').addClass('body_m_efect');\n      }\n\n      $(\".btn-close-popup\").click(function (event) {\n        //--->Close Modal \n        $('#modalPed').addClass('contmod-efectsalir');\n        $('.body_m').removeClass('body_m_efect');\n      });\n      $(\"#btncerrar\").click(function (event) {\n        //--->Close Modal \n        event.preventDefault();\n        $('#modalPed').addClass('contmod-efectsalir');\n        $('.body_m').removeClass('body_m_efect');\n      });\n    },\n    validAddinvit: function validAddinvit() {\n      //----> Valida Invitad Add\n      $('#form-invitado-save').validate({\n        ignore: '.ignore',\n        errorClass: 'invalid',\n        validClass: 'success',\n        rules: {\n          name: {\n            required: true,\n            minlength: 2,\n            maxlength: 25,\n            noSpace: true\n          },\n          lastname: {\n            required: true,\n            minlength: 2,\n            maxlength: 25,\n            noSpace: true\n          },\n          dni: {\n            // se envia a una ruta de un controlador par saber si existe el correo \n            required: true,\n            digits: true,\n            max: 99999999,\n            dnivalida: true,\n            remote: {\n              url: domainurl + \"/invitado/check_dni_unique\",\n              type: \"post\",\n              data: {\n                dni: function dni() {\n                  return $(\"#dni\").val();\n                },\n                '_token': $('meta[name=\"csrf-token\"]').attr('content')\n              }\n            }\n          },\n          selecatego: {\n            required: true\n          }\n        },\n        messages: {\n          name: {\n            required: \"Porfavor ingrese su nombre\",\n            minlength: \"Porfavor minimo 2 caracteres\",\n            maxlength: \"Prfavor maximo 25 caracteres\"\n          },\n          lastname: {\n            required: \"Porfavor ingrese el apellido\",\n            minlength: \"Porfavor minimo 2 caracteres\",\n            maxlength: \"Prfavor maximo 25 caracteres\"\n          },\n          selecatego: {\n            required: \"Seleccione Adulto o ni√±o\"\n          },\n          dni: {\n            required: \"Ingrese Su Dni Aqu√≠..üí¨\",\n            digits: \"Solo permite N√∫meros Aqu√≠üí¨\",\n            max: \"M√°ximo 8 digitos\",\n            remote: \"Dni ya existente !!!\"\n          }\n        },\n        errorPlacement: function errorPlacement(error, element) {\n          error.insertAfter(element);\n        },\n        submitHandler: function submitHandler(form) {\n          //animacion \n          console.log(\"ahora macuri\");\n          $.LoadingOverlay(\"show\");\n          form.submit();\n        }\n      });\n    },\n    validEditinvit: function validEditinvit() {\n      //----> Valid Invitad Edit\n      $('#edit_invit').validate({\n        ignore: '.ignore',\n        errorClass: 'invalid',\n        validClass: 'success',\n        rules: {\n          first_name: {\n            required: true,\n            minlength: 2,\n            maxlength: 25,\n            noSpace: true\n          },\n          last_name: {\n            required: true,\n            minlength: 2,\n            maxlength: 25,\n            noSpace: true\n          },\n          dni: {\n            // se envia a una ruta de un controlador par saber si existe el correo \n            required: true,\n            digits: true,\n            max: 99999999,\n            dnivalida: true\n          },\n          selecperfil: {\n            required: true\n          },\n          selecclave: {\n            required: true\n          }\n        },\n        messages: {\n          first_name: {\n            required: \"Porfavor ingrese su nombre\",\n            minlength: \"Porfavor minimo 2 caracteres\",\n            maxlength: \"Prfavor maximo 25 caracteres\"\n          },\n          last_name: {\n            required: \"Porfavor ingrese el apellido\",\n            minlength: \"Porfavor minimo 2 caracteres\",\n            maxlength: \"Prfavor maximo 25 caracteres\"\n          },\n          selecperfil: {\n            required: \"Seleccione Adulto o ni√±o\"\n          },\n          selecclave: {\n            required: \"Seleccione La clave del socio\"\n          },\n          dni: {\n            required: \"Ingrese Su Dni Aqu√≠..üí¨\",\n            digits: \"Solo permite N√∫meros Aqu√≠üí¨\",\n            max: \"M√°ximo 8 digitos\",\n            remote: \"Dni ya existente !!!\"\n          }\n        },\n        errorPlacement: function errorPlacement(error, element) {\n          error.insertAfter(element);\n        },\n        submitHandler: function submitHandler(form) {\n          //animacion \n          console.log(\"ahora macuri\");\n          $.LoadingOverlay(\"show\");\n          form.submit();\n        }\n      });\n    },\n    homeInvitaTabla: function homeInvitaTabla() {\n      //---> Invitad Tabl Home \n      $(\"#tbl_invit\").DataTable({\n        language: {\n          \"lengthMenu\": \"Mostrar _MENU_ registros\",\n          \"zeroRecords\": \"No se encontraron resultados\",\n          \"info\": \"Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros\",\n          \"infoEmpty\": \"Mostrando registros del 0 al 0 de un total de 0 registros\",\n          \"infoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\n          \"sSearch\": \"Buscar:\",\n          \"oPaginate\": {\n            \"sFirst\": \"Primero\",\n            \"sLast\": \"√öltimo\",\n            \"sNext\": \"Siguiente\",\n            \"sPrevious\": \"Anterior\"\n          },\n          \"sProcessing\": \"Procesando...\"\n        },\n        responsive: true,\n        dom: 'Bfrtilp',\n        buttons: [{\n          extend: 'pdfHtml5',\n          text: '<img src=' + domainurl + '/img/iconos/iconpdf.png width=\"100%\" class=\"img-fluid\">  ',\n          titleAttr: 'Exportar a PDF',\n          messageTop: 'Registro de INVITADOS',\n          title: 'Tabla de Invitados',\n          className: 'btn btn-danger',\n          exportOptions: {\n            columns: [0, 1, 2, 3, 4, 5, 6],\n            alignment: 'center'\n          },\n          excelStyles: {\n            template: 'blue_gray_medium'\n          },\n          customize: function customize(doc) {\n            doc.defaultStyle.alignment = 'center';\n            doc.styles.title = {\n              color: 'red',\n              fontSize: '30',\n              alignment: 'center'\n            };\n            doc.styles['td:nth-child(2)'] = {\n              width: '100px',\n              'max-width': '100px'\n            };\n          }\n        }, {\n          extend: 'print',\n          text: '<img src=' + domainurl + '/img/iconos/iconimp.png width=\"100%\" class=\"img-fluid\">  ',\n          titleAttr: 'imprimir',\n          className: 'btn btn-secondary',\n          exportOptions: {\n            columns: [0, 1, 2, 3, 4, 5, 6]\n          }\n        }, {\n          extend: 'excelHtml5',\n          text: '<img src=' + domainurl + '/img/iconos/icoexcel.png width=\"100%\" class=\"img-fluid\">   ',\n          titleAttr: 'Exportar a Excel',\n          className: 'btn btn-success',\n          exportOptions: {\n            columns: [0, 1, 2, 3, 4, 5, 6]\n          },\n          excelStyles: [// Add an excelStyles definition\n          {\n            template: \"black_medium\" // Apply the \"green_medium\" template\n\n          }, {\n            cells: \"sh\",\n            style: {\n              alignment: {\n                vertical: \"centerContinuous\",\n                horizontal: \"centerContinuous\",\n                wrapText: true\n              },\n              font: {\n                b: true,\n                color: \"FFFFFF\"\n              },\n              fill: {\n                pattern: {\n                  style: \"thick\",\n                  bgColor: 'fd0a43',\n                  color: \"457B9D\" // Fill color \n\n                }\n              }\n            }\n          }, {\n            cells: \"A:\",\n            style: {\n              alignment: {\n                vertical: \"centerContinuous\",\n                horizontal: \"centerContinuous\",\n                wrapText: true\n              }\n            }\n          }]\n        }]\n      }); //---->eliminar\n\n      $('#tbl_invit tbody').on('click', 'a[data-id=\"elicli\"]', function () {\n        var ide = this.name,\n            nom = $(this).attr('data-nom');\n        Swal.fire({\n          title: '¬øEstas seguro de eliminar \"' + nom + '\" ?',\n          text: \"No podr√°s revertir esto !!!\",\n          showCancelButton: true,\n          confirmButtonText: 'Si, eliminar ',\n          backdrop: \" rgba(0, 0, 0, 0.7) \"\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            var _token = $('input[name=\"_token\"]').val();\n\n            $.ajax({\n              url: domainurl + '/invi/' + ide + '/delete/',\n              type: 'GET',\n              beforeSend: function beforeSend() {\n                $.LoadingOverlay(\"show\");\n              }\n            }).done(function (data) {\n              $.LoadingOverlay(\"hide\");\n              Swal.fire({\n                icon: 'success',\n                title: \"Tu Invitado a sido eliminado.\",\n                confirmButtonText: \"Aceptar\"\n              }).then(function () {\n                location.reload();\n              });\n              console.log(\"success\");\n            }).fail(function () {\n              $.LoadingOverlay(\"hide\");\n              Swal.fire({\n                icon: 'error',\n                title: \"No se pudo eliminar el invitado.\",\n                text: 'Intente de nuevo',\n                confirmButtonText: \"Aceptar\"\n              }).then(function () {\n                location.reload();\n              });\n              console.log(\"error\");\n            });\n          }\n        });\n      });\n    },\n    validaAddSoc: function validaAddSoc() {\n      //---> Valida Socio Add  \n      $('#save_soci').validate({\n        ignore: '.ignore',\n        errorClass: 'invalid',\n        validClass: 'success',\n        rules: {\n          first_name: {\n            required: true,\n            minlength: 2,\n            maxlength: 25,\n            noSpace: true\n          },\n          last_name: {\n            required: true,\n            minlength: 2,\n            maxlength: 25,\n            noSpace: true\n          },\n          selecperfil: {\n            required: true\n          },\n          dni: {\n            required: true,\n            digits: true,\n            dnivalida: true,\n            max: 99999999,\n            remote: {\n              url: domainurl + \"/soc/check_dni_unique\",\n              type: \"post\",\n              data: {\n                dni: function dni() {\n                  return $(\"#dni\").val();\n                },\n                '_token': $('meta[name=\"csrf-token\"]').attr('content')\n              }\n            }\n          },\n          email: {\n            required: true,\n            email: true,\n            remote: {\n              url: domainurl + \"/soc/check_email_uniq\",\n              type: \"post\",\n              data: {\n                email: function email() {\n                  return $(\"#email\").val();\n                },\n                '_token': $('meta[name=\"csrf-token\"]').attr('content')\n              }\n            }\n          }\n        },\n        messages: {\n          first_name: {\n            required: \"Porfavor ingrese su nombre\",\n            minlength: \"Porfavor minimo 2 caracteres\",\n            maxlength: \"Prfavor maximo 25 caracteres\"\n          },\n          last_name: {\n            required: \"Porfavor ingrese el apellido\",\n            minlength: \"Porfavor minimo 2 caracteres\",\n            maxlength: \"Prfavor maximo 25 caracteres\"\n          },\n          dni: {\n            required: \"Ingrese Su Dni Aqu√≠..üí¨\",\n            digits: \"Solo permite N√∫meros Aqu√≠üí¨\",\n            max: \"M√°ximo 8 digitos\",\n            remote: \"Dni ya existente !!!\"\n          },\n          selecperfil: {\n            required: \"Seleccione Perfil del socio\"\n          },\n          email: {\n            required: \"Porfavor ingrese su Email\",\n            email: \"Su correo electr√≥nico no es valido\",\n            remote: \"Correo electr√≥nico ya en uso.Prueba con otro\"\n          }\n        },\n        errorPlacement: function errorPlacement(error, element) {\n          error.insertAfter(element);\n        },\n        submitHandler: function submitHandler(form) {\n          //animacion \n          console.log(\"ahora macuri\");\n          $.LoadingOverlay(\"show\");\n          form.submit();\n        }\n      }); //-----> keyup codigo buscar CLAVE \n\n      $(\"#clavetit\").keyup(function (event) {\n        event.preventDefault();\n        var inputclav = $(this).val();\n\n        var _token = $('input[name=\"_token\"]').val(); //console.log(inputclav)\n\n\n        $.ajax({\n          url: domainurl + '/home/buscaclaveaddsoc/',\n          type: 'GET',\n          dataType: 'json',\n          data: {\n            inputclav: inputclav,\n            _token: _token\n          }\n        }).done(function (data) {\n          if (data.daresult == true) {\n            $(\"#perorso\").html('Socio Registrado <i class=\"far fa-check-circle\"></i>').css({\n              color: '#008000'\n            });\n            $(\"#clavetit\").css({\n              'border': '1px solid #008000',\n              'background-color': ' #BDE5AD',\n              color: '#000',\n              'box-shadow': 'none'\n            });\n          } else {\n            $(\"#perorso\").html('Socio no registrado <i class=\"fas fa-exclamation-circle\"></i>').css({\n              color: '#FE1A00'\n            });\n            $(\"#clavetit\").css({\n              'border': '1px solid #FE1A00',\n              'background-color': ' #F3A7B8',\n              color: '#000',\n              'box-shadow': 'none'\n            });\n          }\n        }).fail(function () {\n          console.log(\"error\");\n        });\n      });\n    },\n    validaEditSoc: function validaEditSoc() {\n      //---> Valida Socio Edit \n      $('#edit_soci').validate({\n        ignore: '.ignore',\n        errorClass: 'invalid',\n        validClass: 'success',\n        rules: {\n          first_name: {\n            required: true,\n            minlength: 2,\n            maxlength: 25,\n            noSpace: true\n          },\n          last_name: {\n            required: true,\n            minlength: 2,\n            maxlength: 25,\n            noSpace: true\n          },\n          selecperfil: {\n            required: true\n          },\n          dni: {\n            required: true,\n            digits: true,\n            dnivalida: true,\n            max: 99999999\n          },\n          email: {\n            required: true,\n            email: true\n          }\n        },\n        messages: {\n          first_name: {\n            required: \"Porfavor ingrese su nombre\",\n            minlength: \"Porfavor minimo 2 caracteres\",\n            maxlength: \"Prfavor maximo 25 caracteres\"\n          },\n          last_name: {\n            required: \"Porfavor ingrese el apellido\",\n            minlength: \"Porfavor minimo 2 caracteres\",\n            maxlength: \"Prfavor maximo 25 caracteres\"\n          },\n          dni: {\n            required: \"Ingrese Su Dni Aqu√≠..üí¨\",\n            digits: \"Solo permite N√∫meros Aqu√≠üí¨\",\n            max: \"M√°ximo 8 digitos\"\n          },\n          selecperfil: {\n            required: \"Seleccione Perfil del socio\"\n          },\n          email: {\n            required: \"Porfavor ingrese su Email\",\n            email: \"Su correo electr√≥nico no es valido\"\n          }\n        },\n        errorPlacement: function errorPlacement(error, element) {\n          error.insertAfter(element);\n        },\n        submitHandler: function submitHandler(form) {\n          //animacion \n          console.log(\"ahora macuri\");\n          $.LoadingOverlay(\"show\");\n          form.submit();\n        }\n      }); //-----> keyup codigo buscar CLAVE \n\n      $(\"#clavetit\").keyup(function (event) {\n        event.preventDefault();\n        var inputclav = $(this).val();\n\n        var _token = $('input[name=\"_token\"]').val(); //console.log(inputclav)\n\n\n        $.ajax({\n          url: domainurl + '/home/buscaclaveaddsoc/',\n          type: 'GET',\n          dataType: 'json',\n          data: {\n            inputclav: inputclav,\n            _token: _token\n          }\n        }).done(function (data) {\n          if (data.daresult == true) {\n            $(\"#perorso\").html('Socio Registrado <i class=\"far fa-check-circle\"></i>').css({\n              color: '#008000'\n            });\n            $(\"#clavetit\").css({\n              'border': '1px solid #008000',\n              'background-color': ' #BDE5AD',\n              color: '#000',\n              'box-shadow': 'none'\n            });\n          } else {\n            $(\"#perorso\").html('Socio no registrado <i class=\"fas fa-exclamation-circle\"></i>').css({\n              color: '#FE1A00'\n            });\n            $(\"#clavetit\").css({\n              'border': '1px solid #FE1A00',\n              'background-color': ' #F3A7B8',\n              color: '#000',\n              'box-shadow': 'none'\n            });\n          }\n        }).fail(function () {\n          console.log(\"error\");\n        });\n      });\n    },\n    graficosbackend: function graficosbackend() {\n      //---> Higchart backends \n      if ($(\"#histo01\").length > 0) {\n        var _token = $('input[name=\"_token\"]').val();\n\n        $.ajax({\n          url: domainurl,\n          type: 'GET',\n          dataType: 'json',\n          async: true,\n          data: {\n            _token: _token\n          }\n        }).done(function (data) {\n          var data1 = data[1],\n              data2 = data[2],\n              data3 = data[3],\n              data4 = data[4],\n              data5 = data[5],\n              data6 = data[6]; //---> HISTOGRAMA 01 LINEAL(socio X hora )  \n\n          var chart1 = new Highcharts.Chart({\n            chart: {\n              renderTo: 'histo01',\n              // Le doy el nombre a la gr√°fica\n              type: 'line',\n              // Pongo que tipo de gr√°fica es\n              options3d: {\n                enabled: true,\n                alpha: 15,\n                beta: 15,\n                depth: 100,\n                viewDistance: 25\n              }\n            },\n            title: {\n              text: 'Socios por Hora' // Titulo (Opcional)\n\n            },\n            subtitle: {\n              text: 'WebM@c 2021' // Subtitulo (Opcional)\n\n            },\n            // Pongo los datos en el eje de las 'X'\n            xAxis: {\n              reversed: false,\n              title: {\n                enabled: true,\n                text: 'Horas del dia'\n              },\n              labels: {\n                format: '{value}:00 hs.'\n              },\n              showLastLabel: true\n            },\n            yAxis: {\n              title: {\n                text: 'N¬∞ socios ingresados'\n              },\n              labels: {\n                format: '{value}üö∂‚Äç'\n              },\n              allowDecimals: false,\n              lineWidth: 1\n            },\n            legend: {\n              layout: 'vertical',\n              align: 'up',\n              x: 0,\n              y: 100,\n              verticalAlign: 'middle'\n            },\n            // Doy formato al la \"cajita\" que sale al pasar el rat√≥n por encima de la gr√°fica\n            tooltip: {\n              headerFormat: '<b style=\"text-shadow: none !important;color:red;font-weight: 300\" >{point.x}:00 hs</b><br/>',\n              pointFormat: \"<span style='color:{point.color}'>N¬∞soc: {point.name} </span> <b>{point.y} </b>\"\n            },\n            // Doy opciones a la gr√°fica\n            plotOptions: {\n              column: {\n                depth: 25\n              },\n              pointStart: 2010\n            },\n            credits: {\n              enabled: false\n            },\n            // Doy los datos de la gr√°fica para dibujarlas\n            series: [{\n              name: \"Socios X Hora ‚åö \",\n              data: data1\n            }],\n            responsive: {\n              rules: [{\n                condition: {\n                  maxWidth: 500\n                },\n                chartOptions: {\n                  legend: {\n                    layout: 'horizontal',\n                    align: 'center',\n                    verticalAlign: 'bottom'\n                  }\n                }\n              }]\n            }\n          }); //---> HISTOGRAMA 02 PASTEL(adulto% ni√±os%)  \n\n          var chart2 = new Highcharts.Chart({\n            chart: {\n              renderTo: 'histo02',\n              // Le doy el nombre a la gr√°fica\n              plotBackgroundColor: null,\n              plotBorderWidth: null,\n              plotShadow: false,\n              type: 'pie'\n            },\n            title: {\n              text: 'socios <br> Adultos - Ni√±os' // Titulo (Opcional)\n\n            },\n            subtitle: {\n              text: 'WebM@c 2021' // Subtitulo (Opcional)\n\n            },\n            tooltip: {\n              enabled: true,\n              headerFormat: '<b style=\"text-shadow: none !important;color:red;font-weight: 300\" >{point.key}</b><br/>',\n              pointFormat: \" <span style='color:{point.color}'>{series.name}: </span><b>{point.percentage:.1f}%</b>  \"\n            },\n            accessibility: {\n              point: {\n                valueSuffix: '%'\n              }\n            },\n            plotOptions: {\n              pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                  enabled: true,\n                  format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                  connectorColor: 'red'\n                },\n                showInLegend: true\n              }\n            },\n            credits: {\n              enabled: false\n            },\n            // Doy los datos de la gr√°fica para dibujarlas\n            series: [{\n              name: \"N¬∞Soc\",\n              data: data2\n            }]\n          }); //---> HISTOGRAMA 03 COLUMNA(socio X dias )  \n\n          var chart3 = new Highcharts.Chart({\n            chart: {\n              renderTo: 'histo03',\n              // Le doy el nombre a la gr√°fica\n              type: 'column',\n              // Pongo que tipo de gr√°fica es\n              options3d: {\n                enabled: true,\n                alpha: 15,\n                beta: 25,\n                depth: 100,\n                viewDistance: 25\n              }\n            },\n            title: {\n              text: 'Socios por D√≠a' // Titulo (Opcional)\n\n            },\n            subtitle: {\n              text: 'WebM@c 2021' // Subtitulo (Opcional)\n\n            },\n            // Pongo los datos en el eje de las 'X'\n            xAxis: {\n              type: 'category'\n            },\n            yAxis: {\n              title: {\n                text: 'N¬∞ socios ingresados'\n              },\n              labels: {\n                format: '{value}üö∂‚Äç'\n              },\n              allowDecimals: false,\n              lineWidth: 1\n            },\n            legend: {\n              layout: 'vertical',\n              align: 'up',\n              x: 0,\n              y: 100,\n              verticalAlign: 'middle'\n            },\n            // Doy formato al la \"cajita\" que sale al pasar el rat√≥n por encima de la gr√°fica\n            tooltip: {\n              headerFormat: '<b style=\"text-shadow: none !important;color:red;font-weight: 300\" >{point.key}</b><br/>',\n              pointFormat: \"<span style='color:{point.color}'>N¬∞soc:  </span> <b>{point.y} </b>\"\n            },\n            // Doy opciones a la gr√°fica\n            plotOptions: {\n              column: {\n                depth: 25\n              },\n              pointStart: 2010\n            },\n            credits: {\n              enabled: false\n            },\n            // Doy los datos de la gr√°fica para dibujarlas\n            series: [{\n              name: \"Socios X Dia üìÜ \",\n              data: data3\n            }],\n            responsive: {\n              rules: [{\n                condition: {\n                  maxWidth: 500\n                },\n                chartOptions: {\n                  legend: {\n                    layout: 'horizontal',\n                    align: 'center',\n                    verticalAlign: 'bottom'\n                  }\n                }\n              }]\n            }\n          }); //---> HISTOGRAMA 04 COLUMNA(invitado X dias)  \n\n          var chart4 = new Highcharts.Chart({\n            chart: {\n              renderTo: 'histo04',\n              // Le doy el nombre a la gr√°fica\n              type: 'column',\n              // Pongo que tipo de gr√°fica es\n              options3d: {\n                enabled: true,\n                alpha: 15,\n                beta: 25,\n                depth: 100,\n                viewDistance: 25\n              }\n            },\n            title: {\n              text: 'Invitado por D√≠a' // Titulo (Opcional)\n\n            },\n            subtitle: {\n              text: 'WebM@c 2021' // Subtitulo (Opcional)\n\n            },\n            // Pongo los datos en el eje de las 'X'\n            xAxis: {\n              type: 'category'\n            },\n            yAxis: {\n              title: {\n                text: 'N¬∞ ingreso de invitados'\n              },\n              labels: {\n                format: '{value}üö∂‚Äç'\n              },\n              allowDecimals: false,\n              lineWidth: 1\n            },\n            legend: {\n              layout: 'vertical',\n              align: 'up',\n              x: 0,\n              y: 100,\n              verticalAlign: 'middle'\n            },\n            // Doy formato al la \"cajita\" que sale al pasar el rat√≥n por encima de la gr√°fica\n            tooltip: {\n              headerFormat: '<b style=\"text-shadow: none !important;color:red;font-weight: 300\" >{point.key}</b><br/>',\n              pointFormat: \"<span style='color:{point.color}'>N¬∞inv:  </span> <b>{point.y} </b>\"\n            },\n            // Doy opciones a la gr√°fica\n            plotOptions: {\n              column: {\n                depth: 25\n              },\n              pointStart: 2010\n            },\n            credits: {\n              enabled: false\n            },\n            // Doy los datos de la gr√°fica para dibujarlas\n            series: [{\n              name: \"invitados X Dia üìÜ \",\n              data: data4\n            }],\n            responsive: {\n              rules: [{\n                condition: {\n                  maxWidth: 500\n                },\n                chartOptions: {\n                  legend: {\n                    layout: 'horizontal',\n                    align: 'center',\n                    verticalAlign: 'bottom'\n                  }\n                }\n              }]\n            }\n          }); //---> HISTOGRAMA 05 LINEAL(invitado X hora )  \n\n          var chart5 = new Highcharts.Chart({\n            chart: {\n              renderTo: 'histo05',\n              // Le doy el nombre a la gr√°fica\n              type: 'line',\n              // Pongo que tipo de gr√°fica es\n              options3d: {\n                enabled: true,\n                alpha: 15,\n                beta: 15,\n                depth: 100,\n                viewDistance: 25\n              }\n            },\n            title: {\n              text: 'Invitados por Hora' // Titulo (Opcional)\n\n            },\n            subtitle: {\n              text: 'WebM@c 2021' // Subtitulo (Opcional)\n\n            },\n            // Pongo los datos en el eje de las 'X'\n            xAxis: {\n              reversed: false,\n              title: {\n                enabled: true,\n                text: 'Horas del dia'\n              },\n              labels: {\n                format: '{value}:00 hs.'\n              },\n              showLastLabel: true\n            },\n            yAxis: {\n              title: {\n                text: 'N¬∞ Invitados '\n              },\n              labels: {\n                format: '{value}üö∂‚Äç'\n              },\n              allowDecimals: false,\n              lineWidth: 1\n            },\n            legend: {\n              layout: 'vertical',\n              align: 'up',\n              x: 0,\n              y: 100,\n              verticalAlign: 'middle'\n            },\n            // Doy formato al la \"cajita\" que sale al pasar el rat√≥n por encima de la gr√°fica\n            tooltip: {\n              headerFormat: '<b style=\"text-shadow: none !important;color:red;font-weight: 300\" >{point.x}:00 hs</b><br/>',\n              pointFormat: \"<span style='color:{point.color}'>N¬∞Inv: {point.name} </span> <b>{point.y} </b>\"\n            },\n            // Doy opciones a la gr√°fica\n            plotOptions: {\n              column: {\n                depth: 25\n              },\n              pointStart: 2010\n            },\n            credits: {\n              enabled: false\n            },\n            // Doy los datos de la gr√°fica para dibujarlas\n            series: [{\n              name: \"Invitados X Hora ‚åö \",\n              data: data5\n            }],\n            responsive: {\n              rules: [{\n                condition: {\n                  maxWidth: 500\n                },\n                chartOptions: {\n                  legend: {\n                    layout: 'horizontal',\n                    align: 'center',\n                    verticalAlign: 'bottom'\n                  }\n                }\n              }]\n            }\n          }); //---> HISTOGRAMA 06 PASTEL(adulto% ni√±os%)  \n\n          var chart6 = new Highcharts.Chart({\n            chart: {\n              renderTo: 'histo06',\n              // Le doy el nombre a la gr√°fica\n              plotBackgroundColor: null,\n              plotBorderWidth: null,\n              plotShadow: false,\n              type: 'pie'\n            },\n            title: {\n              text: 'invitados <br> Adultos - Ni√±os' // Titulo (Opcional)\n\n            },\n            subtitle: {\n              text: 'WebM@c 2021' // Subtitulo (Opcional)\n\n            },\n            tooltip: {\n              enabled: true,\n              headerFormat: '<b style=\"text-shadow: none !important;color:red;font-weight: 300\" >{point.key}</b><br/>',\n              pointFormat: \" <span style='color:{point.color}'>{series.name}: </span><b>{point.percentage:.1f}%</b>  \"\n            },\n            accessibility: {\n              point: {\n                valueSuffix: '%'\n              }\n            },\n            plotOptions: {\n              pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                  enabled: true,\n                  format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                  connectorColor: 'red'\n                },\n                showInLegend: true\n              }\n            },\n            credits: {\n              enabled: false\n            },\n            // Doy los datos de la gr√°fica para dibujarlas\n            series: [{\n              name: \"N¬∞Soc\",\n              data: data6\n            }]\n          });\n          Highcharts.setOptions({\n            //----> color degrado higchart\n            colors: Highcharts.getOptions().colors.map(function (color) {\n              return {\n                radialGradient: {\n                  cx: 0.5,\n                  cy: 0.3,\n                  r: 0.7\n                },\n                stops: [[0, color], [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\n                ]\n              };\n            })\n          });\n        }).fail(function () {\n          console.log(\"error\");\n        });\n      }\n    },\n    tablereportsoci: function tablereportsoci() {\n      //---> SocioReport Tabla \n      $(\"#tbl_socio_repor\").DataTable({\n        language: {\n          \"lengthMenu\": \"Mostrar _MENU_ registros\",\n          \"zeroRecords\": \"No se encontraron resultados\",\n          \"info\": \"Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros\",\n          \"infoEmpty\": \"Mostrando registros del 0 al 0 de un total de 0 registros\",\n          \"infoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\n          \"sSearch\": \"Buscar:\",\n          \"oPaginate\": {\n            \"sFirst\": \"Primero\",\n            \"sLast\": \"√öltimo\",\n            \"sNext\": \"Siguiente\",\n            \"sPrevious\": \"Anterior\"\n          },\n          \"sProcessing\": \"Procesando...\"\n        },\n        responsive: true,\n        dom: 'Bfrtilp',\n        buttons: [{\n          extend: 'pdfHtml5',\n          text: '<img src=' + domainurl + '/img/iconos/iconpdf.png width=\"100%\" class=\"img-fluid\">  ',\n          titleAttr: 'Exportar a PDF',\n          messageTop: 'Reporte de Socios',\n          title: 'Tabla de Reporte Socios',\n          className: 'btn btn-danger',\n          exportOptions: {\n            columns: [0, 1, 3, 4, 5, 6, 7, 8, 9],\n            alignment: 'center'\n          },\n          excelStyles: {\n            template: 'blue_gray_medium'\n          },\n          customize: function customize(doc) {\n            doc.defaultStyle.alignment = 'center';\n            doc.styles.title = {\n              color: 'red',\n              fontSize: '30',\n              alignment: 'center'\n            };\n            doc.styles['td:nth-child(2)'] = {\n              width: '100px',\n              'max-width': '100px'\n            };\n          }\n        }, {\n          extend: 'print',\n          text: '<img src=' + domainurl + '/img/iconos/iconimp.png width=\"100%\" class=\"img-fluid\">  ',\n          titleAttr: 'imprimir',\n          className: 'btn btn-secondary',\n          exportOptions: {\n            columns: [0, 1, 3, 4, 5, 6, 7, 8, 9]\n          }\n        }, {\n          extend: 'excelHtml5',\n          text: '<img src=' + domainurl + '/img/iconos/icoexcel.png width=\"100%\" class=\"img-fluid\">   ',\n          titleAttr: 'Exportar a Excel',\n          className: 'btn btn-success',\n          exportOptions: {\n            columns: [0, 1, 3, 4, 5, 6, 7, 8, 9]\n          },\n          excelStyles: [// Add an excelStyles definition\n          {\n            template: \"black_medium\" // Apply the \"green_medium\" template\n\n          }, {\n            cells: \"sh\",\n            style: {\n              alignment: {\n                vertical: \"centerContinuous\",\n                horizontal: \"centerContinuous\",\n                wrapText: true\n              },\n              font: {\n                b: true,\n                color: \"FFFFFF\"\n              },\n              fill: {\n                pattern: {\n                  style: \"thick\",\n                  bgColor: 'fd0a43',\n                  color: \"457B9D\" // Fill color \n\n                }\n              }\n            }\n          }, {\n            cells: \"A:\",\n            style: {\n              alignment: {\n                vertical: \"centerContinuous\",\n                horizontal: \"centerContinuous\",\n                wrapText: true\n              }\n            }\n          }]\n        }]\n      });\n    },\n    tablereportinvi: function tablereportinvi() {\n      //---> InvitaReport Tabla\n      $(\"#tbl_invit_repor\").DataTable({\n        language: {\n          \"lengthMenu\": \"Mostrar _MENU_ registros\",\n          \"zeroRecords\": \"No se encontraron resultados\",\n          \"info\": \"Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros\",\n          \"infoEmpty\": \"Mostrando registros del 0 al 0 de un total de 0 registros\",\n          \"infoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\n          \"sSearch\": \"Buscar:\",\n          \"oPaginate\": {\n            \"sFirst\": \"Primero\",\n            \"sLast\": \"√öltimo\",\n            \"sNext\": \"Siguiente\",\n            \"sPrevious\": \"Anterior\"\n          },\n          \"sProcessing\": \"Procesando...\"\n        },\n        responsive: true,\n        dom: 'Bfrtilp',\n        buttons: [{\n          extend: 'pdfHtml5',\n          text: '<img src=' + domainurl + '/img/iconos/iconpdf.png width=\"100%\" class=\"img-fluid\">  ',\n          titleAttr: 'Exportar a PDF',\n          messageTop: 'Reporte de INVITADOS',\n          title: 'Tabla de Reporte Invitados',\n          className: 'btn btn-danger',\n          exportOptions: {\n            columns: [0, 1, 2, 3, 4, 5],\n            alignment: 'center'\n          },\n          excelStyles: {\n            template: 'blue_gray_medium'\n          },\n          customize: function customize(doc) {\n            doc.defaultStyle.alignment = 'center';\n            doc.styles.title = {\n              color: 'red',\n              fontSize: '30',\n              alignment: 'center'\n            };\n          }\n        }, {\n          extend: 'print',\n          text: '<img src=' + domainurl + '/img/iconos/iconimp.png width=\"100%\" class=\"img-fluid\">  ',\n          titleAttr: 'imprimir',\n          className: 'btn btn-secondary',\n          exportOptions: {\n            columns: [0, 1, 2, 3, 4, 5]\n          }\n        }, {\n          extend: 'excelHtml5',\n          text: '<img src=' + domainurl + '/img/iconos/icoexcel.png width=\"100%\" class=\"img-fluid\">   ',\n          titleAttr: 'Exportar a Excel',\n          className: 'btn btn-success',\n          exportOptions: {\n            columns: [0, 1, 2, 3, 4, 5]\n          },\n          excelStyles: [// Add an excelStyles definition\n          {\n            template: \"black_medium\" // Apply the \"green_medium\" template\n\n          }, {\n            cells: \"sh\",\n            style: {\n              alignment: {\n                vertical: \"centerContinuous\",\n                horizontal: \"centerContinuous\",\n                wrapText: true\n              },\n              font: {\n                b: true,\n                color: \"FFFFFF\"\n              },\n              fill: {\n                pattern: {\n                  style: \"thick\",\n                  bgColor: 'fd0a43',\n                  color: \"457B9D\" // Fill color \n\n                }\n              }\n            }\n          }, {\n            cells: \"A:\",\n            style: {\n              alignment: {\n                vertical: \"centerContinuous\",\n                horizontal: \"centerContinuous\",\n                wrapText: true\n              }\n            }\n          }]\n        }]\n      });\n    },\n    fechaHoraActual: function fechaHoraActual() {\n      //---> Fecha header ACtua\n      var actualizahora = function actualizahora() {\n        var fecha = new Date(),\n            horas = fecha.getHours(),\n            ampm,\n            minutos = fecha.getMinutes(),\n            segundos = fecha.getSeconds(),\n            diaSemana = fecha.getDay(),\n            dia = fecha.getDate(),\n            mes = fecha.getMonth(),\n            year = fecha.getFullYear();\n\n        if ($(\"#fecha\").length > 0) {\n          var fec = document.getElementById('fecha');\n          var semana = ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sabado'];\n          var meses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Setiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n\n          if (horas >= 12) {\n            horas = horas - 12;\n            ampm = 'PM';\n          } else {\n            ampm = 'AM';\n          }\n\n          if (horas == 0) {\n            horas = 12;\n          }\n\n          if (minutos < 10) {\n            minutos = \"0\" + minutos;\n          }\n\n          if (segundos < 10) {\n            segundos = \"0\" + segundos;\n          }\n\n          fec.textContent = year + ' ' + meses[mes] + ' ' + dia + ' ' + semana[diaSemana] + ' ' + horas + ':' + minutos + ':' + segundos;\n        }\n      };\n\n      actualizahora();\n      var intervalo = setInterval(actualizahora, 1000);\n    },\n    modalingrsSoci: function modalingrsSoci() {\n      function showPopup() {\n        $('.pop-up').addClass('show');\n        $('.pop-up-wrap').addClass('show');\n      }\n\n      $(\"#close\").click(function () {\n        $('.pop-up').removeClass('show');\n        $('.pop-up-wrap').removeClass('show');\n        $(\"#h2invimodls\").html($(\"#clave_socio\").val());\n      });\n      $(\".btn-abrir\").click(function (event) {\n        event.preventDefault();\n        var clave = $(\"#clave_socio\").val();\n\n        var _token = $('input[name=\"_token\"]').val();\n\n        if ($(\"#clave_socio\").val() === \"\") {\n          Swal.fire('No ingreso una clave de socio', 'Rellenar el campo clave', 'question');\n        } else {\n          $.ajax({\n            url: domainurl + '/showsociomodal',\n            type: 'POST',\n            dataType: 'json',\n            data: {\n              clave: clave,\n              _token: _token\n            }\n          }).done(function (datas) {\n            //console.log(datas)\n            if (datas.datacla == \"\") {\n              Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'No existe este Socio o',\n                footer: '<h3 href=\"\" class=\"text-center\">Problamente no tiene ninguna socio ingresado !!!</h3>'\n              });\n            } else {\n              $(\"#tbl_sociomodal\").DataTable({\n                processing: true,\n                serverSide: true,\n                destroy: true,\n                searching: true,\n                responsive: true,\n                scrollY: '300px',\n                \"bPaginate\": false,\n                //hide pagination\n                \"bFilter\": false,\n                //hide Search bar\n                \"bInfo\": false,\n                // hide showing entries\n                ajax: {\n                  url: domainurl + '/showsociomodal',\n                  data: {\n                    clave: clave,\n                    _token: _token\n                  },\n                  type: 'post',\n                  dataSrc: 'datacla'\n                  /*dataSrc: function ( data ) {\r\n                          //Make your callback here.\r\n                          //alert(\"Done!\");\r\n                           //return json.datacla;\r\n                           console.log(data)\r\n                      }*/\n\n                },\n                columns: [{\n                  \"data\": \"full_name\"\n                }, {\n                  \"data\": \"avatar\",\n                  \"render\": function render(avatar, type, row, idsoc) {\n                    if (avatar) {\n                      return '<img src=\"' + domainurl + '/uploads_socios/soc_' + row.idsoc + '/av_' + avatar + '\" style=\"height:50px;width:50px;\" />';\n                    } else {\n                      return '<img src=\"http://localhost/sociosclub2021/public/img/iconos/user-avatar.png\" style=\"height:50px;width:50px;\" />';\n                    }\n                  }\n                }, {\n                  \"data\": \"tipo\"\n                }, {\n                  \"data\": \"dni\"\n                }, {\n                  \"data\": \"diasox\"\n                }],\n                language: {\n                  \"lengthMenu\": \"Mostrar _MENU_ registros\",\n                  \"zeroRecords\": \"No se encontraron resultados\",\n                  \"info\": \"Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros\",\n                  \"infoEmpty\": \"Mostrando registros del 0 al 0 de un total de 0 registros\",\n                  \"infoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\n                  \"sSearch\": \"Buscar:\",\n                  \"oPaginate\": {\n                    \"sFirst\": \"Primero\",\n                    \"sLast\": \"√öltimo\",\n                    \"sNext\": \"Siguiente\",\n                    \"sPrevious\": \"Anterior\"\n                  },\n                  \"sProcessing\": \"Procesando...\"\n                },\n                dom: 'Bfrtilp',\n                buttons: [{\n                  extend: 'pdfHtml5',\n                  text: '<img src=' + domainurl + '/img/iconos/iconpdf.png width=\"100%\" class=\"img-fluid\">  ',\n                  titleAttr: 'Exportar a PDF',\n                  messageTop: 'Registro de Socios',\n                  title: 'Tabla de Socios',\n                  className: 'btn btn-danger',\n                  exportOptions: {\n                    columns: [0, 1, 3, 4, 5, 6, 7, 8, 9],\n                    alignment: 'center'\n                  },\n                  excelStyles: {\n                    template: 'blue_gray_medium'\n                  },\n                  customize: function customize(doc) {\n                    doc.defaultStyle.alignment = 'center';\n                    doc.styles.title = {\n                      color: 'red',\n                      fontSize: '30',\n                      alignment: 'center'\n                    };\n                    doc.styles['td:nth-child(2)'] = {\n                      width: '100px',\n                      'max-width': '100px'\n                    };\n                  }\n                }, {\n                  extend: 'print',\n                  text: '<img src=' + domainurl + '/img/iconos/iconimp.png width=\"100%\" class=\"img-fluid\">  ',\n                  titleAttr: 'imprimir',\n                  className: 'btn btn-secondary',\n                  exportOptions: {\n                    columns: [0, 1, 3, 4, 5, 6, 7, 8, 9]\n                  }\n                }, {\n                  extend: 'excelHtml5',\n                  text: '<img src=' + domainurl + '/img/iconos/icoexcel.png width=\"100%\" class=\"img-fluid\">   ',\n                  titleAttr: 'Exportar a Excel',\n                  className: 'btn btn-success',\n                  exportOptions: {\n                    columns: [0, 1, 3, 4, 5, 6, 7, 8, 9]\n                  },\n                  excelStyles: [// Add an excelStyles definition\n                  {\n                    template: \"black_medium\" // Apply the \"green_medium\" template\n\n                  }, {\n                    cells: \"sh\",\n                    style: {\n                      alignment: {\n                        vertical: \"centerContinuous\",\n                        horizontal: \"centerContinuous\",\n                        wrapText: true\n                      },\n                      font: {\n                        b: true,\n                        color: \"FFFFFF\"\n                      },\n                      fill: {\n                        pattern: {\n                          style: \"thick\",\n                          bgColor: 'fd0a43',\n                          color: \"457B9D\" // Fill color \n\n                        }\n                      }\n                    }\n                  }, {\n                    cells: \"A:\",\n                    style: {\n                      alignment: {\n                        vertical: \"centerContinuous\",\n                        horizontal: \"centerContinuous\",\n                        wrapText: true\n                      }\n                    }\n                  }]\n                }]\n              });\n              showPopup();\n            } //console.log(\"success\");\n\n          }).fail(function () {\n            console.log(\"error\");\n          }).always(function () {//  console.log(\"complete\");\n          });\n        }\n      });\n    },\n    modalingrsInvi: function modalingrsInvi() {\n      function showPopupInvit() {\n        $('.pop-up2').addClass('show');\n        $('.pop-up-wrap2').addClass('show');\n        $(\"#h2invimodls\").html($(\"#clave_socio\").val());\n      }\n\n      $(\"#close2\").click(function () {\n        $('.pop-up2').removeClass('show');\n        $('.pop-up-wrap2').removeClass('show');\n      });\n      $(\".btn-abrir-invi\").click(function (event) {\n        event.preventDefault();\n        var clave = $(\"#clave_socio\").val();\n\n        var _token = $('input[name=\"_token\"]').val();\n\n        if ($(\"#clave_socio\").val() === \"\") {\n          Swal.fire('No ingreso una clave de socio', 'Rellenar el campo clave', 'question');\n        } else {\n          $.ajax({\n            url: domainurl + '/showsociomodal',\n            type: 'POST',\n            dataType: 'json',\n            data: {\n              clave: clave,\n              _token: _token\n            }\n          }).done(function (datas) {\n            console.log(datas);\n\n            if (datas.datacla == \"\") {\n              Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'No existe este Socio o',\n                footer: '<h3 href=\"\" class=\"text-center\">Problamente no tiene ninguna socio ingresado !!!</h3>'\n              });\n            } else {\n              $(\"#tbl_sociomodalinvi\").DataTable({\n                processing: true,\n                serverSide: true,\n                destroy: true,\n                searching: true,\n                responsive: true,\n                scrollY: '300px',\n                \"bPaginate\": false,\n                //hide pagination\n                \"bFilter\": false,\n                //hide Search bar\n                \"bInfo\": false,\n                // hide showing entries\n                ajax: {\n                  url: domainurl + '/showinviomodal',\n                  data: {\n                    clave: clave,\n                    _token: _token\n                  },\n                  type: 'post',\n                  dataSrc: 'datacla'\n                },\n                columns: [{\n                  \"data\": \"full_name\"\n                }, {\n                  \"data\": \"dniinvi\"\n                }, {\n                  \"data\": \"diasox\"\n                }, {\n                  \"data\": \"clasesoc\"\n                }],\n                language: {\n                  \"lengthMenu\": \"Mostrar _MENU_ registros\",\n                  \"zeroRecords\": \"No se encontraron resultados\",\n                  \"info\": \"Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros\",\n                  \"infoEmpty\": \"Mostrando registros del 0 al 0 de un total de 0 registros\",\n                  \"infoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\n                  \"sSearch\": \"Buscar:\",\n                  \"oPaginate\": {\n                    \"sFirst\": \"Primero\",\n                    \"sLast\": \"√öltimo\",\n                    \"sNext\": \"Siguiente\",\n                    \"sPrevious\": \"Anterior\"\n                  },\n                  \"sProcessing\": \"Procesando...\"\n                },\n                dom: 'Bfrtilp',\n                buttons: [{\n                  extend: 'pdfHtml5',\n                  text: '<img src=' + domainurl + '/img/iconos/iconpdf.png width=\"100%\" class=\"img-fluid\">  ',\n                  titleAttr: 'Exportar a PDF',\n                  messageTop: 'Registro de Socios',\n                  title: 'Tabla de Socios',\n                  className: 'btn btn-danger',\n                  exportOptions: {\n                    columns: [0, 1, 2, 3],\n                    alignment: 'center'\n                  },\n                  excelStyles: {\n                    template: 'blue_gray_medium'\n                  },\n                  customize: function customize(doc) {\n                    doc.defaultStyle.alignment = 'center';\n                    doc.styles.title = {\n                      color: 'red',\n                      fontSize: '30',\n                      alignment: 'center'\n                    };\n                    doc.styles['td:nth-child(2)'] = {\n                      width: '100px',\n                      'max-width': '100px'\n                    };\n                  }\n                }, {\n                  extend: 'print',\n                  text: '<img src=' + domainurl + '/img/iconos/iconimp.png width=\"100%\" class=\"img-fluid\">  ',\n                  titleAttr: 'imprimir',\n                  className: 'btn btn-secondary',\n                  exportOptions: {\n                    columns: [0, 1, 2, 3]\n                  }\n                }, {\n                  extend: 'excelHtml5',\n                  text: '<img src=' + domainurl + '/img/iconos/icoexcel.png width=\"100%\" class=\"img-fluid\">   ',\n                  titleAttr: 'Exportar a Excel',\n                  className: 'btn btn-success',\n                  exportOptions: {\n                    columns: [0, 1, 2, 3]\n                  },\n                  excelStyles: [// Add an excelStyles definition\n                  {\n                    template: \"black_medium\" // Apply the \"green_medium\" template\n\n                  }, {\n                    cells: \"sh\",\n                    style: {\n                      alignment: {\n                        vertical: \"centerContinuous\",\n                        horizontal: \"centerContinuous\",\n                        wrapText: true\n                      },\n                      font: {\n                        b: true,\n                        color: \"FFFFFF\"\n                      },\n                      fill: {\n                        pattern: {\n                          style: \"thick\",\n                          bgColor: 'fd0a43',\n                          color: \"457B9D\" // Fill color \n\n                        }\n                      }\n                    }\n                  }, {\n                    cells: \"A:\",\n                    style: {\n                      alignment: {\n                        vertical: \"centerContinuous\",\n                        horizontal: \"centerContinuous\",\n                        wrapText: true\n                      }\n                    }\n                  }]\n                }]\n              });\n              showPopupInvit();\n            } //console.log(\"success\");\n\n          }).fail(function () {\n            console.log(\"error\");\n          }).always(function () {//  console.log(\"complete\");\n          });\n        }\n      });\n    },\n    codigoqr: function codigoqr() {\n      var Musique = new Audio();\n      $(\"#btnscan\").click(function (event) {\n        /* Act on the event */\n        event.preventDefault();\n        $(\".loadvideo\").addClass('loading');\n        scan();\n      });\n\n      function scan() {\n        var scanner = new Instascan.Scanner({\n          video: document.getElementById('preview')\n        });\n        scanner.addListener('scan', function (content) {\n          if (content != '') {\n            $(\".loadvideo\").removeClass('loading');\n\n            var _token = $('input[name=\"_token\"]').val();\n\n            $.ajax({\n              url: domainurl + '/api/scan/' + content,\n              type: 'POST',\n              dataType: 'json',\n              data: {\n                _token: _token\n              }\n            }).done(function (data) {\n              console.log(data);\n              console.log(data.msg);\n              console.log(\"success\");\n\n              if (data.msg == 'ok') {\n                //-----------> SOCIO no INGRESO\n                scanner.stop();\n\n                if (data.datasocio['avatar']) {\n                  $(\"#img-qr\").attr(\"src\", domainurl + \"/uploads_socios/soc_\" + data.datasocio['id'] + \"/av_\" + data.datasocio['avatar']);\n                } else {\n                  $(\"#img-qr\").attr(\"src\", domainurl + \"/img/iconos/user-avatar.png\");\n                }\n\n                $('#clave_socio').val(data.datasocio['clave']);\n                $('#nom-qr').html(data.datasocio['name']);\n                $('#ape-qr').html(data.datasocio['lastname']);\n\n                if (data.datasocio['perfil_id'] == 1) {\n                  $('#perfil-qr').html(\"Titular\");\n                } else if (data.datasocio['perfil_id'] == 2) {\n                  $('#perfil-qr').html(\"Conyuge\");\n                } else if (data.datasocio['perfil_id'] == 3) {\n                  $('#perfil-qr').html(\"Familiar\");\n                }\n\n                Musique.src = \"http://localhost/sociosclub2021/public/success.wav\";\n                Musique.play();\n                Swal.fire('Bienvenido ' + data.datasocio['name'], 'Te estabamos esperando', 'success').then(function () {\n                  scanner.start();\n                });\n              } else if (data.msg == 'existe') {\n                //---> SOCIO YA INGRESO\n                scanner.stop();\n\n                if (data.datasocio['avatar']) {\n                  $(\"#img-qr\").attr(\"src\", domainurl + \"/uploads_socios/soc_\" + data.datasocio['id'] + \"/av_\" + data.datasocio['avatar']);\n                } else {\n                  $(\"#img-qr\").attr(\"src\", domainurl + \"/img/iconos/user-avatar.png\");\n                }\n\n                $('#clave_socio').val(data.datasocio['clave']);\n                $('#nom-qr').html(data.datasocio['name']);\n                $('#ape-qr').html(data.datasocio['lastname']);\n\n                if (data.datasocio['perfil_id'] == 1) {\n                  $('#perfil-qr').html(\"Titular\");\n                } else if (data.datasocio['perfil_id'] == 2) {\n                  $('#perfil-qr').html(\"Conyuge\");\n                } else if (data.datasocio['perfil_id'] == 3) {\n                  $('#perfil-qr').html(\"Familiar\");\n                }\n\n                Musique.src = \"http://localhost/sociosclub2021/public/error.mp3\";\n                Musique.play();\n                Swal.fire('¬°¬°Advertencia El socio ya ingreso!!', 'No podemos registrar su ingreso otra vez.', 'warning').then(function () {\n                  scanner.start();\n                });\n              }\n            }).fail(function () {\n              Musique.src = \"http://localhost/sociosclub2021/public/erroring.mp3\";\n              Musique.play();\n              Swal.fire('El socio no existe o no esta registrado !!!', 'No podemos registrar su ingreso. ', 'error').then(function () {\n                scanner.start();\n              });\n              console.log(\"error\");\n            }).always(function () {\n              console.log(\"complete\");\n            });\n          }\n        });\n        Instascan.Camera.getCameras().then(function (cameras) {\n          if (cameras.length > 0) {\n            scanner.start(cameras[0]);\n          } else {\n            console.error('No cameras found.');\n          }\n        })[\"catch\"](function (e) {\n          console.error(e);\n        });\n      }\n    }\n  };\n  Toptitop();\n}(jQuery, window);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/jshome.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/jshome.js"]();
/******/ 	
/******/ })()
;